name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '18 5 * * 3'

concurrency: 
  group: ci
  cancel-in-progress: true
    
jobs:
    macOS_11:
        name: Test macOS 11
        runs-on: macOS-11
        env:
            DEVELOPER_DIR: /Applications/Xcode_13.0.app/Contents/Developer
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - name: macOS 11
              run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "SwiftUICharts" -destination "platform=macOS" clean test | xcpretty

    iOS_15:
        name: Test iOS 15
        runs-on: macOS-11
        env:
            DEVELOPER_DIR: /Applications/Xcode_13.1.app/Contents/Developer
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - name: iOS 15
              run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "SwiftUICharts" -destination "platform=iOS Simulator,name=iPhone 11,OS=15.0" clean test | xcpretty
    iOS_14:
        name: Test iOS 14
        runs-on: macOS-11
        env:
            DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - name: iOS 14
              run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "SwiftUICharts" -destination "platform=iOS Simulator,name=iPhone 11,OS=14.4" clean test | xcpretty

    tvOS_15:
        name: Test tvOS 15
        runs-on: macOS-11
        env:
            DEVELOPER_DIR: /Applications/Xcode_13.0.app/Contents/Developer
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - name: tvOS 15
              run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "SwiftUICharts" -destination "platform=tvOS Simulator,name=Apple TV 4K (2nd generation),OS=15.0" clean test | xcpretty
    tvOS_14:
        name: Test tvOS 14
        runs-on: macOS-11
        env:
            DEVELOPER_DIR: /Applications/Xcode_12.4.app/Contents/Developer
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - name: tvOS 14
              run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "SwiftUICharts" -destination "platform=tvOS Simulator,name=Apple TV 4K,OS=14.3" clean test | xcpretty

    watchOS_8:
        name: Test watchOS 8
        runs-on: macOS-11
        env:
            DEVELOPER_DIR: /Applications/Xcode_13.1.app/Contents/Developer
        timeout-minutes: 10
        steps:
            - uses: actions/checkout@v2
            - name: watchOS 8.0
              run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "SwiftUICharts" -destination "platform=watchOS Simulator,name=Apple Watch Series 7 - 45mm,OS=8.0" clean test | xcpretty

    analyze:
      name: Analyze
      runs-on: ubuntu-latest
      permissions:
        actions: read
        contents: read
        security-events: write

      strategy:
        fail-fast: false
        matrix:
          language: [ 'ruby' ]
          # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
          # Learn more about CodeQL language support at https://git.io/codeql-language-support

      steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
